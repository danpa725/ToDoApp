{"version":3,"sources":["../config.js","scripts/weatherApi.js"],"names":["WEATHER_API_KEY","LOCATION","weather","document","querySelector","getWeatherApi","lat","lon","fetch","API_KEY","then","res","json","innerText","tempInfo","main","temp","locationInfo","name","weatherInfo","description","tempLocationSpan","createElement","weatherSpan","appendChild","saveLocation","LocationObj","localStorage","setItem","JSON","stringify","handleGetLocationSucess","position","coords","latitude","longitude","handleGetLocationFail","console","log","err","getUserLocation","navigator","geolocation","getCurrentPosition","loadLocationFromDb","userLocation","getItem","parseLocation","parse","init"],"mappings":";AAAO,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,qBAAA,EAAA,IAAMA,EAAkB,mCAAxB,QAAA,gBAAA;;ACgEH,aAhEJ,IAAA,EAAA,QAAA,gBACMC,EAAW,WACXC,EAAUC,SAASC,cAAc,eAEjCC,EAAgB,SAACC,EAAKC,GACxBC,MAA6DF,uDAAAA,OAAAA,EAAWC,SAAAA,OAAAA,EAAaE,WAAAA,OAAAA,EAAhF,gBAAL,wBAEKC,KAAK,SAACC,GAAQA,OAAAA,EAAIC,SAClBF,KAAK,SAACE,GACHV,EAAQW,UAAY,GACdC,IAAAA,EAAWF,EAAKG,KAAKC,KACrBC,EAAeL,EAAKM,KACpBC,EAAcP,EAAKV,QAAQ,GAAGkB,YAE9BC,EAAmBlB,SAASmB,cAAc,QAC1CC,EAAcpB,SAASmB,cAAc,QAE3CD,EAAiBR,UAAeI,GAAAA,OAAAA,EAAgBH,KAAAA,OAAAA,EAAhD,MACAS,EAAYV,UAAeM,GAAAA,OAAAA,GAE3BjB,EAAQsB,YAAYH,GACpBnB,EAAQsB,YAAYD,MAI1BE,EAAe,SAACC,GAClBC,aAAaC,QAAQ3B,EAAU4B,KAAKC,UAAUJ,KAG5CK,EAA0B,SAACC,GACGA,IAAAA,EAAAA,EAASC,OAAjCC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,UAMlBV,EAJqB,CACjBS,SAAAA,EACAC,UAAAA,IAGJ9B,EAAc6B,EAAUC,IAGtBC,EAAwB,WAAMC,OAAAA,QAAQC,IAAIC,MAE1CC,EAAkB,WACpBC,UAAUC,YAAYC,mBAClBZ,EACAK,IAIFQ,EAAqB,WACjBC,IAAAA,EAAelB,aAAamB,QAAQ7C,GAEtC4C,GAAiB,OAAjBA,EACAL,QACG,CACGO,IAAAA,EAAgBlB,KAAKmB,MAAMH,GACjCxC,EAAc0C,EAAcb,SAAUa,EAAcZ,aAItDc,EAAO,WACTL,KAGJK","file":"weatherApi.4fd44173.js","sourceRoot":"..\\src","sourcesContent":["export const WEATHER_API_KEY = \"046d3fe338852441cdf9a272ace1c5ab\";\r\n","import { WEATHER_API_KEY as API_KEY } from \"../../config\";\r\nconst LOCATION = \"LOCATION\";\r\nconst weather = document.querySelector(\".js-weather\");\r\n\r\nconst getWeatherApi = (lat, lon) => {\r\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${API_KEY}&units=metric\r\n    `)\r\n        .then((res) => res.json())\r\n        .then((json) => {\r\n            weather.innerText = \"\";\r\n            const tempInfo = json.main.temp;\r\n            const locationInfo = json.name;\r\n            const weatherInfo = json.weather[0].description;\r\n\r\n            const tempLocationSpan = document.createElement(\"span\");\r\n            const weatherSpan = document.createElement(\"span\");\r\n\r\n            tempLocationSpan.innerText = `${locationInfo} ${tempInfo}Â°C`;\r\n            weatherSpan.innerText = `${weatherInfo}`;\r\n\r\n            weather.appendChild(tempLocationSpan);\r\n            weather.appendChild(weatherSpan);\r\n        });\r\n};\r\n\r\nconst saveLocation = (LocationObj) => {\r\n    localStorage.setItem(LOCATION, JSON.stringify(LocationObj));\r\n};\r\n\r\nconst handleGetLocationSucess = (position) => {\r\n    const { latitude, longitude } = position.coords;\r\n\r\n    const userLocation = {\r\n        latitude,\r\n        longitude,\r\n    };\r\n    saveLocation(userLocation);\r\n    getWeatherApi(latitude, longitude);\r\n};\r\n\r\nconst handleGetLocationFail = () => console.log(err);\r\n\r\nconst getUserLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(\r\n        handleGetLocationSucess,\r\n        handleGetLocationFail\r\n    );\r\n};\r\n\r\nconst loadLocationFromDb = () => {\r\n    const userLocation = localStorage.getItem(LOCATION);\r\n\r\n    if (userLocation === null) {\r\n        getUserLocation();\r\n    } else {\r\n        const parseLocation = JSON.parse(userLocation);\r\n        getWeatherApi(parseLocation.latitude, parseLocation.longitude);\r\n    }\r\n};\r\n\r\nconst init = () => {\r\n    loadLocationFromDb();\r\n};\r\n\r\ninit();\r\n"]}